{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/components/Light.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { viewPropTypes } from \"../utils\";\nimport { LightLayerStyleProp } from \"../utils/styleMap\";\nimport AbstractLayer from \"./AbstractLayer\";\nexport var NATIVE_MODULE_NAME = 'RCTMGLLight';\n\nvar Light = function (_AbstractLayer) {\n  _inherits(Light, _AbstractLayer);\n\n  var _super = _createSuper(Light);\n\n  function Light() {\n    _classCallCheck(this, Light);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Light, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this.refs.nativeLight) {\n        this.refs.nativeLight.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RCTMGLLight, _extends({\n        ref: \"nativeLight\"\n      }, this.props, {\n        style: undefined,\n        reactStyle: this.getStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Light;\n}(AbstractLayer);\n\nLight.propTypes = _objectSpread(_objectSpread({}, viewPropTypes), {}, {\n  style: LightLayerStyleProp\n});\nvar RCTMGLLight = requireNativeComponent(NATIVE_MODULE_NAME, Light, {\n  nativeOnly: {\n    reactStyle: true\n  }\n});\nexport default Light;","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/components/Light.js"],"names":["React","requireNativeComponent","viewPropTypes","LightLayerStyleProp","AbstractLayer","NATIVE_MODULE_NAME","Light","props","refs","nativeLight","setNativeProps","undefined","getStyle","propTypes","style","RCTMGLLight","nativeOnly","reactStyle"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;SACQC,sB;AAER,SAAQC,aAAR;AACA,SAAQC,mBAAR;AAEA,OAAOC,aAAP;AAEA,OAAO,IAAMC,kBAAkB,GAAG,aAA3B;;IAKDC,K;;;;;;;;;;;;;WAUJ,wBAAeC,KAAf,EAAsB;AACpB,UAAI,KAAKC,IAAL,CAAUC,WAAd,EAA2B;AACzB,aAAKD,IAAL,CAAUC,WAAV,CAAsBC,cAAtB,CAAqCH,KAArC;AACD;AACF;;;WAED,kBAAS;AACP,aACE,oBAAC,WAAD;AACE,QAAA,GAAG,EAAC;AADN,SAEM,KAAKA,KAFX;AAGE,QAAA,KAAK,EAAEI,SAHT;AAIE,QAAA,UAAU,EAAE,KAAKC,QAAL,EAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQD;;;;EAzBiBR,a;;AAAdE,K,CACGO,S,mCACFX,a;AAKHY,EAAAA,KAAK,EAAEX;;AAqBX,IAAMY,WAAW,GAAGd,sBAAsB,CAACI,kBAAD,EAAqBC,KAArB,EAA4B;AACpEU,EAAAA,UAAU,EAAE;AAACC,IAAAA,UAAU,EAAE;AAAb;AADwD,CAA5B,CAA1C;AAIA,eAAeX,KAAf","sourcesContent":["import React from 'react';\nimport {requireNativeComponent} from 'react-native';\n\nimport {viewPropTypes} from '../utils';\nimport {LightLayerStyleProp} from '../utils/styleMap';\n\nimport AbstractLayer from './AbstractLayer';\n\nexport const NATIVE_MODULE_NAME = 'RCTMGLLight';\n\n/**\n * Light represents the light source for extruded geometries\n */\nclass Light extends AbstractLayer {\n  static propTypes = {\n    ...viewPropTypes,\n\n    /**\n     * Customizable style attributes\n     */\n    style: LightLayerStyleProp,\n  };\n\n  setNativeProps(props) {\n    if (this.refs.nativeLight) {\n      this.refs.nativeLight.setNativeProps(props);\n    }\n  }\n\n  render() {\n    return (\n      <RCTMGLLight\n        ref=\"nativeLight\"\n        {...this.props}\n        style={undefined}\n        reactStyle={this.getStyle()}\n      />\n    );\n  }\n}\n\nconst RCTMGLLight = requireNativeComponent(NATIVE_MODULE_NAME, Light, {\n  nativeOnly: {reactStyle: true},\n});\n\nexport default Light;\n"]},"metadata":{},"sourceType":"module"}