{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { toJSONString } from \"../../utils\";\nimport { makePoint, makeFeatureCollection } from \"../../utils/geoUtils\";\nvar MapboxGL = NativeModules.MGLModule;\n\nvar SnapshotOptions = function () {\n  function SnapshotOptions() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SnapshotOptions);\n\n    if (!options.centerCoordinate && !options.bounds) {\n      throw new Error('Center coordinate or bounds must be supplied in order to take a snapshot');\n    }\n\n    this.styleURL = options.styleURL || MapboxGL.StyleURL.Street;\n    this.heading = options.heading || 0.0;\n    this.pitch = options.pitch || 0.0;\n    this.zoomLevel = options.zoomLevel || 16.0;\n    this.width = options.width || 50.0;\n    this.height = options.height || 50.0;\n    this.writeToDisk = options.writeToDisk || false;\n    this.withLogo = options.withLogo === undefined ? true : options.withLogo;\n\n    if (options.centerCoordinate) {\n      this.centerCoordinate = this._createCenterCoordPoint(options.centerCoordinate);\n    }\n\n    if (options.bounds) {\n      this.bounds = this._createBoundsCollection(options.bounds);\n    }\n  }\n\n  _createClass(SnapshotOptions, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        styleURL: this.styleURL,\n        heading: this.heading,\n        pitch: this.pitch,\n        zoomLevel: this.zoomLevel,\n        width: this.width,\n        height: this.height,\n        writeToDisk: this.writeToDisk,\n        centerCoordinate: this.centerCoordinate,\n        bounds: this.bounds,\n        withLogo: this.withLogo\n      };\n    }\n  }, {\n    key: \"_createCenterCoordPoint\",\n    value: function _createCenterCoordPoint(centerCoordinate) {\n      var point = makePoint(centerCoordinate);\n      return toJSONString(point);\n    }\n  }, {\n    key: \"_createBoundsCollection\",\n    value: function _createBoundsCollection(bounds) {\n      var features = [];\n\n      for (var _iterator = _createForOfIteratorHelperLoose(bounds), _step; !(_step = _iterator()).done;) {\n        var bound = _step.value;\n        features.push(makePoint(bound));\n      }\n\n      return toJSONString(makeFeatureCollection(features));\n    }\n  }]);\n\n  return SnapshotOptions;\n}();\n\nexport default SnapshotOptions;","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/modules/snapshot/SnapshotOptions.js"],"names":["toJSONString","makePoint","makeFeatureCollection","MapboxGL","NativeModules","MGLModule","SnapshotOptions","options","centerCoordinate","bounds","Error","styleURL","StyleURL","Street","heading","pitch","zoomLevel","width","height","writeToDisk","withLogo","undefined","_createCenterCoordPoint","_createBoundsCollection","point","features","bound","push"],"mappings":";;;;;;;;;;AAEA,SAAQA,YAAR;AACA,SAAQC,SAAR,EAAmBC,qBAAnB;AAEA,IAAMC,QAAQ,GAAGC,aAAa,CAACC,SAA/B;;IAEMC,e;AACJ,6BAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,QAAI,CAACA,OAAO,CAACC,gBAAT,IAA6B,CAACD,OAAO,CAACE,MAA1C,EAAkD;AAChD,YAAM,IAAIC,KAAJ,CACJ,0EADI,CAAN;AAGD;;AAED,SAAKC,QAAL,GAAgBJ,OAAO,CAACI,QAAR,IAAoBR,QAAQ,CAACS,QAAT,CAAkBC,MAAtD;AACA,SAAKC,OAAL,GAAeP,OAAO,CAACO,OAAR,IAAmB,GAAlC;AACA,SAAKC,KAAL,GAAaR,OAAO,CAACQ,KAAR,IAAiB,GAA9B;AACA,SAAKC,SAAL,GAAiBT,OAAO,CAACS,SAAR,IAAqB,IAAtC;AACA,SAAKC,KAAL,GAAaV,OAAO,CAACU,KAAR,IAAiB,IAA9B;AACA,SAAKC,MAAL,GAAcX,OAAO,CAACW,MAAR,IAAkB,IAAhC;AACA,SAAKC,WAAL,GAAmBZ,OAAO,CAACY,WAAR,IAAuB,KAA1C;AACA,SAAKC,QAAL,GAAgBb,OAAO,CAACa,QAAR,KAAqBC,SAArB,GAAiC,IAAjC,GAAwCd,OAAO,CAACa,QAAhE;;AAEA,QAAIb,OAAO,CAACC,gBAAZ,EAA8B;AAC5B,WAAKA,gBAAL,GAAwB,KAAKc,uBAAL,CACtBf,OAAO,CAACC,gBADc,CAAxB;AAGD;;AAED,QAAID,OAAO,CAACE,MAAZ,EAAoB;AAClB,WAAKA,MAAL,GAAc,KAAKc,uBAAL,CAA6BhB,OAAO,CAACE,MAArC,CAAd;AACD;AACF;;;;WAED,kBAAS;AACP,aAAO;AACLE,QAAAA,QAAQ,EAAE,KAAKA,QADV;AAELG,QAAAA,OAAO,EAAE,KAAKA,OAFT;AAGLC,QAAAA,KAAK,EAAE,KAAKA,KAHP;AAILC,QAAAA,SAAS,EAAE,KAAKA,SAJX;AAKLC,QAAAA,KAAK,EAAE,KAAKA,KALP;AAMLC,QAAAA,MAAM,EAAE,KAAKA,MANR;AAOLC,QAAAA,WAAW,EAAE,KAAKA,WAPb;AAQLX,QAAAA,gBAAgB,EAAE,KAAKA,gBARlB;AASLC,QAAAA,MAAM,EAAE,KAAKA,MATR;AAULW,QAAAA,QAAQ,EAAE,KAAKA;AAVV,OAAP;AAYD;;;WAED,iCAAwBZ,gBAAxB,EAA0C;AACxC,UAAMgB,KAAK,GAAGvB,SAAS,CAACO,gBAAD,CAAvB;AACA,aAAOR,YAAY,CAACwB,KAAD,CAAnB;AACD;;;WAED,iCAAwBf,MAAxB,EAAgC;AAC9B,UAAMgB,QAAQ,GAAG,EAAjB;;AAEA,2DAAoBhB,MAApB,wCAA4B;AAAA,YAAjBiB,KAAiB;AAC1BD,QAAAA,QAAQ,CAACE,IAAT,CAAc1B,SAAS,CAACyB,KAAD,CAAvB;AACD;;AAED,aAAO1B,YAAY,CAACE,qBAAqB,CAACuB,QAAD,CAAtB,CAAnB;AACD;;;;;;AAGH,eAAenB,eAAf","sourcesContent":["import {NativeModules} from 'react-native';\n\nimport {toJSONString} from '../../utils';\nimport {makePoint, makeFeatureCollection} from '../../utils/geoUtils';\n\nconst MapboxGL = NativeModules.MGLModule;\n\nclass SnapshotOptions {\n  constructor(options = {}) {\n    if (!options.centerCoordinate && !options.bounds) {\n      throw new Error(\n        'Center coordinate or bounds must be supplied in order to take a snapshot',\n      );\n    }\n\n    this.styleURL = options.styleURL || MapboxGL.StyleURL.Street;\n    this.heading = options.heading || 0.0;\n    this.pitch = options.pitch || 0.0;\n    this.zoomLevel = options.zoomLevel || 16.0;\n    this.width = options.width || 50.0;\n    this.height = options.height || 50.0;\n    this.writeToDisk = options.writeToDisk || false;\n    this.withLogo = options.withLogo === undefined ? true : options.withLogo;\n\n    if (options.centerCoordinate) {\n      this.centerCoordinate = this._createCenterCoordPoint(\n        options.centerCoordinate,\n      );\n    }\n\n    if (options.bounds) {\n      this.bounds = this._createBoundsCollection(options.bounds);\n    }\n  }\n\n  toJSON() {\n    return {\n      styleURL: this.styleURL,\n      heading: this.heading,\n      pitch: this.pitch,\n      zoomLevel: this.zoomLevel,\n      width: this.width,\n      height: this.height,\n      writeToDisk: this.writeToDisk,\n      centerCoordinate: this.centerCoordinate,\n      bounds: this.bounds,\n      withLogo: this.withLogo,\n    };\n  }\n\n  _createCenterCoordPoint(centerCoordinate) {\n    const point = makePoint(centerCoordinate);\n    return toJSONString(point);\n  }\n\n  _createBoundsCollection(bounds) {\n    const features = [];\n\n    for (const bound of bounds) {\n      features.push(makePoint(bound));\n    }\n\n    return toJSONString(makeFeatureCollection(features));\n  }\n}\n\nexport default SnapshotOptions;\n"]},"metadata":{},"sourceType":"module"}