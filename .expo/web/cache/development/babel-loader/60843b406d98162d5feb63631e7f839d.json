{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { makeLatLngBounds } from \"../../utils/geoUtils\";\nimport { toJSONString } from \"../../utils\";\n\nvar OfflineCreatePackOptions = function () {\n  function OfflineCreatePackOptions() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, OfflineCreatePackOptions);\n\n    this._assert(options);\n\n    this.name = options.name;\n    this.styleURL = options.styleURL;\n    this.bounds = this._makeLatLngBounds(options.bounds);\n    this.minZoom = options.minZoom;\n    this.maxZoom = options.maxZoom;\n    this.metadata = this._makeMetadata(options.metadata);\n  }\n\n  _createClass(OfflineCreatePackOptions, [{\n    key: \"_assert\",\n    value: function _assert(options) {\n      if (!options.styleURL) {\n        throw new Error('Style URL must be provided for creating an offline pack');\n      }\n\n      if (!options.name) {\n        throw new Error('Name must be provided for creating an offline pack');\n      }\n\n      if (!options.bounds) {\n        throw new Error('Bounds must be provided for creating an offline pack');\n      }\n    }\n  }, {\n    key: \"_makeLatLngBounds\",\n    value: function _makeLatLngBounds(bounds) {\n      var ne = bounds[0];\n      var sw = bounds[1];\n      return toJSONString(makeLatLngBounds(ne, sw));\n    }\n  }, {\n    key: \"_makeMetadata\",\n    value: function _makeMetadata(metadata) {\n      return JSON.stringify(_objectSpread(_objectSpread({}, metadata), {}, {\n        name: this.name\n      }));\n    }\n  }]);\n\n  return OfflineCreatePackOptions;\n}();\n\nexport default OfflineCreatePackOptions;","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/modules/offline/OfflineCreatePackOptions.js"],"names":["makeLatLngBounds","toJSONString","OfflineCreatePackOptions","options","_assert","name","styleURL","bounds","_makeLatLngBounds","minZoom","maxZoom","metadata","_makeMetadata","Error","ne","sw","JSON","stringify"],"mappings":";;;;;;;;AAAA,SAAQA,gBAAR;AACA,SAAQC,YAAR;;IAEMC,wB;AACJ,sCAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKC,OAAL,CAAaD,OAAb;;AAEA,SAAKE,IAAL,GAAYF,OAAO,CAACE,IAApB;AACA,SAAKC,QAAL,GAAgBH,OAAO,CAACG,QAAxB;AACA,SAAKC,MAAL,GAAc,KAAKC,iBAAL,CAAuBL,OAAO,CAACI,MAA/B,CAAd;AACA,SAAKE,OAAL,GAAeN,OAAO,CAACM,OAAvB;AACA,SAAKC,OAAL,GAAeP,OAAO,CAACO,OAAvB;AACA,SAAKC,QAAL,GAAgB,KAAKC,aAAL,CAAmBT,OAAO,CAACQ,QAA3B,CAAhB;AACD;;;;WAED,iBAAQR,OAAR,EAAiB;AACf,UAAI,CAACA,OAAO,CAACG,QAAb,EAAuB;AACrB,cAAM,IAAIO,KAAJ,CACJ,yDADI,CAAN;AAGD;;AAED,UAAI,CAACV,OAAO,CAACE,IAAb,EAAmB;AACjB,cAAM,IAAIQ,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,UAAI,CAACV,OAAO,CAACI,MAAb,EAAqB;AACnB,cAAM,IAAIM,KAAJ,CAAU,sDAAV,CAAN;AACD;AACF;;;WAED,2BAAkBN,MAAlB,EAA0B;AACxB,UAAMO,EAAE,GAAGP,MAAM,CAAC,CAAD,CAAjB;AACA,UAAMQ,EAAE,GAAGR,MAAM,CAAC,CAAD,CAAjB;AACA,aAAON,YAAY,CAACD,gBAAgB,CAACc,EAAD,EAAKC,EAAL,CAAjB,CAAnB;AACD;;;WAED,uBAAcJ,QAAd,EAAwB;AACtB,aAAOK,IAAI,CAACC,SAAL,iCACFN,QADE;AAELN,QAAAA,IAAI,EAAE,KAAKA;AAFN,SAAP;AAID;;;;;;AAGH,eAAeH,wBAAf","sourcesContent":["import {makeLatLngBounds} from '../../utils/geoUtils';\nimport {toJSONString} from '../../utils';\n\nclass OfflineCreatePackOptions {\n  constructor(options = {}) {\n    this._assert(options);\n\n    this.name = options.name;\n    this.styleURL = options.styleURL;\n    this.bounds = this._makeLatLngBounds(options.bounds);\n    this.minZoom = options.minZoom;\n    this.maxZoom = options.maxZoom;\n    this.metadata = this._makeMetadata(options.metadata);\n  }\n\n  _assert(options) {\n    if (!options.styleURL) {\n      throw new Error(\n        'Style URL must be provided for creating an offline pack',\n      );\n    }\n\n    if (!options.name) {\n      throw new Error('Name must be provided for creating an offline pack');\n    }\n\n    if (!options.bounds) {\n      throw new Error('Bounds must be provided for creating an offline pack');\n    }\n  }\n\n  _makeLatLngBounds(bounds) {\n    const ne = bounds[0];\n    const sw = bounds[1];\n    return toJSONString(makeLatLngBounds(ne, sw));\n  }\n\n  _makeMetadata(metadata) {\n    return JSON.stringify({\n      ...metadata,\n      name: this.name,\n    });\n  }\n}\n\nexport default OfflineCreatePackOptions;\n"]},"metadata":{},"sourceType":"module"}