{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/asha/Documents/miniboss/node_modules/react-native-grid-layout/Components/Row.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport computeProps from \"../Utils/computeProps\";\nimport _ from 'lodash';\n\nvar RowNB = function (_Component) {\n  _inherits(RowNB, _Component);\n\n  var _super = _createSuper(RowNB);\n\n  function RowNB() {\n    _classCallCheck(this, RowNB);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RowNB, [{\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var type = {\n        flexDirection: 'row',\n        flex: this.props.size ? this.props.size : this.props.style && this.props.style.height ? 0 : 1\n      };\n      var defaultProps = {\n        style: type\n      };\n      return computeProps(this.props, defaultProps);\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.onPress) {\n        return React.createElement(TouchableOpacity, {\n          onPress: this.props.onPress,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }\n        }, React.createElement(View, _extends({\n          ref: function ref(component) {\n            return _this._root = component;\n          }\n        }, this.props, this.prepareRootProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }), this.props.children));\n      } else {\n        return React.createElement(View, _extends({\n          ref: function ref(component) {\n            return _this._root = component;\n          }\n        }, this.props, this.prepareRootProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }), this.props.children);\n      }\n    }\n  }]);\n\n  return RowNB;\n}(Component);\n\nexport { RowNB as default };","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/node_modules/react-native-grid-layout/Components/Row.js"],"names":["React","Component","computeProps","_","RowNB","type","flexDirection","flex","props","size","style","height","defaultProps","nativeProps","_root","setNativeProps","onPress","component","prepareRootProps","children"],"mappings":"AACA;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAGA,OAAOC,YAAP;AACA,OAAOC,CAAP,MAAc,QAAd;;IAGqBC,K;;;;;;;;;;;;;WACjB,4BAAmB;AAEf,UAAIC,IAAI,GAAG;AACVC,QAAAA,aAAa,EAAE,KADL;AAEVC,QAAAA,IAAI,EAAG,KAAKC,KAAL,CAAWC,IAAZ,GAAoB,KAAKD,KAAL,CAAWC,IAA/B,GAAuC,KAAKD,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWE,KAAX,CAAiBC,MAAtC,GAAgD,CAAhD,GAAoD;AAFtF,OAAX;AAKA,UAAIC,YAAY,GAAG;AACfF,QAAAA,KAAK,EAAEL;AADQ,OAAnB;AAGA,aAAOH,YAAY,CAAC,KAAKM,KAAN,EAAaI,YAAb,CAAnB;AAEH;;;WAED,wBAAeC,WAAf,EAA4B;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD;;;WAED,kBAAS;AAAA;;AACP,UAAG,KAAKL,KAAL,CAAWQ,OAAd,EAAsB;AACpB,eACI,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE,KAAKR,KAAL,CAAWQ,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACF,oBAAC,IAAD;AACF,UAAA,GAAG,EAAE,aAAAC,SAAS;AAAA,mBAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;AAAA;AADZ,WAEE,KAAKT,KAFP,EAGE,KAAKU,gBAAL,EAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIF,KAAKV,KAAL,CAAWW,QAJT,CADE,CADJ;AASD,OAVD,MAWI;AACF,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAE,aAAAF,SAAS;AAAA,mBAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;AAAA;AADhB,WAEM,KAAKT,KAFX,EAGM,KAAKU,gBAAL,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIE,KAAKV,KAAL,CAAWW,QAJb,CADF;AAOD;AACF;;;;EAxC8BlB,S;;SAAdG,K","sourcesContent":["/* @flow */\n'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\n\nimport computeProps from '../Utils/computeProps';\nimport _ from 'lodash';\n\n\nexport default class RowNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n        \tflexDirection: 'row',\n        \tflex: (this.props.size) ? this.props.size : (this.props.style && this.props.style.height) ? 0 : 1,\n        }\n\n        var defaultProps = {\n            style: type\n        }\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n    render() {\n      if(this.props.onPress){\n        return(\n            <TouchableOpacity onPress={this.props.onPress}>\n          <View\n        ref={component => this._root = component}\n        {...this.props}\n        {...this.prepareRootProps()}\n      >{this.props.children}</View>\n          </TouchableOpacity>\n      );\n      }\n      else{\n        return(\n          <View\n            ref={component => this._root = component}\n            {...this.props}\n            {...this.prepareRootProps()}\n          >{this.props.children}</View>\n        );\n      }\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}