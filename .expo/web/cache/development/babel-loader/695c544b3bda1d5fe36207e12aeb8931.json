{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport { getFilter } from \"../utils/filterUtils\";\nimport { getStyleType } from \"../utils/styleMap\";\nimport BridgeValue from \"../utils/BridgeValue\";\n\nvar AbstractLayer = function (_React$PureComponent) {\n  _inherits(AbstractLayer, _React$PureComponent);\n\n  var _super = _createSuper(AbstractLayer);\n\n  function AbstractLayer() {\n    _classCallCheck(this, AbstractLayer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AbstractLayer, [{\n    key: \"baseProps\",\n    get: function get() {\n      return _objectSpread(_objectSpread({}, this.props), {}, {\n        id: this.props.id,\n        sourceID: this.props.sourceID,\n        reactStyle: this.getStyle(),\n        minZoomLevel: this.props.minZoomLevel,\n        maxZoomLevel: this.props.maxZoomLevel,\n        aboveLayerID: this.props.aboveLayerID,\n        belowLayerID: this.props.belowLayerID,\n        layerIndex: this.props.layerIndex,\n        filter: getFilter(this.props.filter),\n        style: undefined\n      });\n    }\n  }, {\n    key: \"getStyleTypeFormatter\",\n    value: function getStyleTypeFormatter(styleType) {\n      if (styleType === 'color') {\n        return processColor;\n      }\n    }\n  }, {\n    key: \"_getStyle\",\n    value: function _getStyle(style) {\n      if (!style) {\n        return;\n      }\n\n      var nativeStyle = {};\n      var styleProps = Object.keys(style);\n\n      for (var _i = 0, _styleProps = styleProps; _i < _styleProps.length; _i++) {\n        var styleProp = _styleProps[_i];\n        var styleType = getStyleType(styleProp);\n        var rawStyle = style[styleProp];\n\n        if (styleType === 'color' && typeof rawStyle === 'string') {\n          rawStyle = processColor(rawStyle);\n        } else if (styleType === 'image' && typeof rawStyle === 'number') {\n          rawStyle = resolveAssetSource(rawStyle) || {};\n        }\n\n        var bridgeValue = new BridgeValue(rawStyle);\n        nativeStyle[styleProp] = {\n          styletype: styleType,\n          stylevalue: bridgeValue.toJSON()\n        };\n      }\n\n      return nativeStyle;\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      return this._getStyle(this.props.style);\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this.refs.nativeLayer) {\n        var propsToPass = props;\n\n        if (props.style) {\n          propsToPass = _objectSpread(_objectSpread({}, props), {}, {\n            reactStyle: this._getStyle(props.style)\n          });\n        }\n\n        this.refs.nativeLayer.setNativeProps(propsToPass);\n      }\n    }\n  }]);\n\n  return AbstractLayer;\n}(React.PureComponent);\n\nexport default AbstractLayer;","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/components/AbstractLayer.js"],"names":["React","resolveAssetSource","getFilter","getStyleType","BridgeValue","AbstractLayer","props","id","sourceID","reactStyle","getStyle","minZoomLevel","maxZoomLevel","aboveLayerID","belowLayerID","layerIndex","filter","style","undefined","styleType","processColor","nativeStyle","styleProps","Object","keys","styleProp","rawStyle","bridgeValue","styletype","stylevalue","toJSON","_getStyle","refs","nativeLayer","propsToPass","setNativeProps","PureComponent"],"mappings":";;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,kBAAP,MAA+B,iDAA/B;AAEA,SAAQC,SAAR;AACA,SAAQC,YAAR;AACA,OAAOC,WAAP;;IAEMC,a;;;;;;;;;;;;;SACJ,eAAgB;AACd,6CACK,KAAKC,KADV;AAEEC,QAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EAFjB;AAGEC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAHvB;AAIEC,QAAAA,UAAU,EAAE,KAAKC,QAAL,EAJd;AAKEC,QAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWK,YAL3B;AAMEC,QAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWM,YAN3B;AAOEC,QAAAA,YAAY,EAAE,KAAKP,KAAL,CAAWO,YAP3B;AAQEC,QAAAA,YAAY,EAAE,KAAKR,KAAL,CAAWQ,YAR3B;AASEC,QAAAA,UAAU,EAAE,KAAKT,KAAL,CAAWS,UATzB;AAUEC,QAAAA,MAAM,EAAEd,SAAS,CAAC,KAAKI,KAAL,CAAWU,MAAZ,CAVnB;AAWEC,QAAAA,KAAK,EAAEC;AAXT;AAaD;;;WAED,+BAAsBC,SAAtB,EAAiC;AAC/B,UAAIA,SAAS,KAAK,OAAlB,EAA2B;AACzB,eAAOC,YAAP;AACD;AACF;;;WAED,mBAAUH,KAAV,EAAiB;AACf,UAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAED,UAAMI,WAAW,GAAG,EAApB;AACA,UAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYP,KAAZ,CAAnB;;AACA,qCAAwBK,UAAxB,iCAAoC;AAA/B,YAAMG,SAAS,kBAAf;AACH,YAAMN,SAAS,GAAGhB,YAAY,CAACsB,SAAD,CAA9B;AACA,YAAIC,QAAQ,GAAGT,KAAK,CAACQ,SAAD,CAApB;;AAEA,YAAIN,SAAS,KAAK,OAAd,IAAyB,OAAOO,QAAP,KAAoB,QAAjD,EAA2D;AACzDA,UAAAA,QAAQ,GAAGN,YAAY,CAACM,QAAD,CAAvB;AACD,SAFD,MAEO,IAAIP,SAAS,KAAK,OAAd,IAAyB,OAAOO,QAAP,KAAoB,QAAjD,EAA2D;AAChEA,UAAAA,QAAQ,GAAGzB,kBAAkB,CAACyB,QAAD,CAAlB,IAAgC,EAA3C;AACD;;AAED,YAAMC,WAAW,GAAG,IAAIvB,WAAJ,CAAgBsB,QAAhB,CAApB;AACAL,QAAAA,WAAW,CAACI,SAAD,CAAX,GAAyB;AACvBG,UAAAA,SAAS,EAAET,SADY;AAEvBU,UAAAA,UAAU,EAAEF,WAAW,CAACG,MAAZ;AAFW,SAAzB;AAID;;AAED,aAAOT,WAAP;AACD;;;WAED,oBAAW;AACT,aAAO,KAAKU,SAAL,CAAe,KAAKzB,KAAL,CAAWW,KAA1B,CAAP;AACD;;;WAED,wBAAeX,KAAf,EAAsB;AACpB,UAAI,KAAK0B,IAAL,CAAUC,WAAd,EAA2B;AACzB,YAAIC,WAAW,GAAG5B,KAAlB;;AACA,YAAIA,KAAK,CAACW,KAAV,EAAiB;AACfiB,UAAAA,WAAW,mCAAO5B,KAAP;AAAcG,YAAAA,UAAU,EAAE,KAAKsB,SAAL,CAAezB,KAAK,CAACW,KAArB;AAA1B,YAAX;AACD;;AACD,aAAKe,IAAL,CAAUC,WAAV,CAAsBE,cAAtB,CAAqCD,WAArC;AACD;AACF;;;;EA9DyBlC,KAAK,CAACoC,a;;AAiElC,eAAe/B,aAAf","sourcesContent":["/* eslint react/prop-types:0  */\nimport React from 'react';\nimport {processColor} from 'react-native';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\n\nimport {getFilter} from '../utils/filterUtils';\nimport {getStyleType} from '../utils/styleMap';\nimport BridgeValue from '../utils/BridgeValue';\n\nclass AbstractLayer extends React.PureComponent {\n  get baseProps() {\n    return {\n      ...this.props,\n      id: this.props.id,\n      sourceID: this.props.sourceID,\n      reactStyle: this.getStyle(),\n      minZoomLevel: this.props.minZoomLevel,\n      maxZoomLevel: this.props.maxZoomLevel,\n      aboveLayerID: this.props.aboveLayerID,\n      belowLayerID: this.props.belowLayerID,\n      layerIndex: this.props.layerIndex,\n      filter: getFilter(this.props.filter),\n      style: undefined,\n    };\n  }\n\n  getStyleTypeFormatter(styleType) {\n    if (styleType === 'color') {\n      return processColor;\n    }\n  }\n\n  _getStyle(style) {\n    if (!style) {\n      return;\n    }\n\n    const nativeStyle = {};\n    const styleProps = Object.keys(style);\n    for (const styleProp of styleProps) {\n      const styleType = getStyleType(styleProp);\n      let rawStyle = style[styleProp];\n\n      if (styleType === 'color' && typeof rawStyle === 'string') {\n        rawStyle = processColor(rawStyle);\n      } else if (styleType === 'image' && typeof rawStyle === 'number') {\n        rawStyle = resolveAssetSource(rawStyle) || {};\n      }\n\n      const bridgeValue = new BridgeValue(rawStyle);\n      nativeStyle[styleProp] = {\n        styletype: styleType,\n        stylevalue: bridgeValue.toJSON(),\n      };\n    }\n\n    return nativeStyle;\n  }\n\n  getStyle() {\n    return this._getStyle(this.props.style);\n  }\n\n  setNativeProps(props) {\n    if (this.refs.nativeLayer) {\n      let propsToPass = props;\n      if (props.style) {\n        propsToPass = {...props, reactStyle: this._getStyle(props.style)};\n      }\n      this.refs.nativeLayer.setNativeProps(propsToPass);\n    }\n  }\n}\n\nexport default AbstractLayer;\n"]},"metadata":{},"sourceType":"module"}