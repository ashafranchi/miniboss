{"ast":null,"code":"var _jsxFileName = \"/Users/asha/Documents/miniboss/App.js\";\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport FirstPage from \"./screens/FirstPage\";\nimport SecondPage from \"./screens/SecondPage\";\nimport ThirdPage from \"./screens/ThirdPage\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nfunction firstScreenStack(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"FirstPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"FirstPage\",\n    component: FirstPage,\n    options: {\n      title: 'First Page',\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction secondScreenStack(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"SecondPage\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SecondPage\",\n    component: SecondPage,\n    options: {\n      title: 'Second Page'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ThirdPage\",\n    component: ThirdPage,\n    options: {\n      title: 'Third Page'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Navigator, {\n    drawerType: 'permanent',\n    drawerContentOptions: {\n      activeTintColor: '#e91e63',\n      itemStyle: {\n        marginVertical: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"FirstPage\",\n    options: {\n      drawerLabel: 'First page Option'\n    },\n    component: firstScreenStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"SecondPage\",\n    options: {\n      drawerLabel: 'Second page Option'\n    },\n    component: secondScreenStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/App.js"],"names":["React","NavigationContainer","createStackNavigator","createDrawerNavigator","FirstPage","SecondPage","ThirdPage","Stack","Drawer","firstScreenStack","navigation","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","secondScreenStack","App","activeTintColor","itemStyle","marginVertical","drawerLabel"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\n\nimport * as React from 'react';\nimport {\n  Button,\n  View,\n  Text,\n  TouchableOpacity,\n  Image\n} from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport FirstPage from './screens/FirstPage';\nimport SecondPage from './screens/SecondPage';\nimport ThirdPage from './screens/ThirdPage';\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\n\n// const NavigationDrawerStructure = (props)=> {\n//   //Structure for the navigatin Drawer\n//   const toggleDrawer = () => {\n//     //Props to open/close the drawer\n//     props.navigationProps.toggleDrawer();\n//   };\n\n//   return (\n//     <View style={{ flexDirection: 'row' }}>\n//       <TouchableOpacity onPress={()=> toggleDrawer()}>\n//         {/*Donute Button Image */}\n//         <Image\n//           source={{uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png'}}\n//           style={{\n//             width: 25,\n//             height: 25,\n//             marginLeft: 5\n//           }}\n//         />\n//       </TouchableOpacity>\n//     </View>\n//   );\n// }\n\nfunction firstScreenStack({ navigation }) {\n  return (\n      <Stack.Navigator initialRouteName=\"FirstPage\">\n        <Stack.Screen\n          name=\"FirstPage\"\n          component={FirstPage}\n          options={{\n            title: 'First Page', //Set Header Title\n            // headerLeft: ()=>\n            //   <NavigationDrawerStructure\n            //     navigationProps={navigation}\n            //   />,\n            headerStyle: {\n              backgroundColor: '#f4511e', //Set Header color\n            },\n            headerTintColor: '#fff', //Set Header text color\n            headerTitleStyle: {\n              fontWeight: 'bold', //Set Header text style\n            },\n          }}\n        />\n      </Stack.Navigator>\n  );\n}\n\nfunction secondScreenStack({ navigation }) {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"SecondPage\"\n      screenOptions={{\n        // headerLeft: ()=>\n        //   <NavigationDrawerStructure\n        //     navigationProps={navigation}\n        //   />,\n        headerStyle: {\n          backgroundColor: '#f4511e', //Set Header color\n        },\n        headerTintColor: '#fff', //Set Header text color\n        headerTitleStyle: {\n          fontWeight: 'bold', //Set Header text style\n        }\n      }}>\n      <Stack.Screen\n        name=\"SecondPage\"\n        component={SecondPage}\n        options={{\n          title: 'Second Page', //Set Header Title\n          \n        }}/>\n      <Stack.Screen\n        name=\"ThirdPage\"\n        component={ThirdPage}\n        options={{\n          title: 'Third Page', //Set Header Title\n        }}/>\n    </Stack.Navigator>\n  );\n}\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator\n        drawerType={'permanent'}\n        drawerContentOptions={{\n          activeTintColor: '#e91e63',\n          itemStyle: { marginVertical: 5 },\n        }}>\n        <Drawer.Screen\n          name=\"FirstPage\"\n          options={{ drawerLabel: 'First page Option' }}\n          component={firstScreenStack} />\n        <Drawer.Screen\n          name=\"SecondPage\"\n          options={{ drawerLabel: 'Second page Option' }}\n          component={secondScreenStack} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}