{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/components/ImageSource.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { cloneReactChildrenWithProps, viewPropTypes, isNumber, resolveImagePath } from \"../utils\";\nimport AbstractSource from \"./AbstractSource\";\nexport var NATIVE_MODULE_NAME = 'RCTMGLImageSource';\n\nvar ImageSource = function (_AbstractSource) {\n  _inherits(ImageSource, _AbstractSource);\n\n  var _super = _createSuper(ImageSource);\n\n  function ImageSource() {\n    _classCallCheck(this, ImageSource);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ImageSource, [{\n    key: \"_getURL\",\n    value: function _getURL() {\n      var url = this.props.url;\n\n      if (isNumber(this.props.url)) {\n        url = resolveImagePath(this.props.url);\n      }\n\n      return url;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.url || !this.props.coordinates || !this.props.coordinates.length) {\n        return null;\n      }\n\n      var props = _objectSpread(_objectSpread({}, this.props), {}, {\n        url: this._getURL()\n      });\n\n      return React.createElement(RCTMGLImageSource, _extends({\n        ref: \"nativeSource\"\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }), cloneReactChildrenWithProps(this.props.children, {\n        sourceID: this.props.id\n      }));\n    }\n  }]);\n\n  return ImageSource;\n}(AbstractSource);\n\nImageSource.propTypes = _objectSpread(_objectSpread({}, viewPropTypes), {}, {\n  id: PropTypes.string.isRequired,\n  url: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  coordinates: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number).isRequired).isRequired\n});\nvar RCTMGLImageSource = requireNativeComponent(NATIVE_MODULE_NAME, ImageSource);\nexport default ImageSource;","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/components/ImageSource.js"],"names":["React","PropTypes","requireNativeComponent","cloneReactChildrenWithProps","viewPropTypes","isNumber","resolveImagePath","AbstractSource","NATIVE_MODULE_NAME","ImageSource","url","props","coordinates","length","_getURL","children","sourceID","id","propTypes","string","isRequired","oneOfType","number","arrayOf","RCTMGLImageSource"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;SACQC,sB;AAER,SACEC,2BADF,EAEEC,aAFF,EAGEC,QAHF,EAIEC,gBAJF;AAOA,OAAOC,cAAP;AAEA,OAAO,IAAMC,kBAAkB,GAAG,mBAA3B;;IAMDC,W;;;;;;;;;;;;;WAuBJ,mBAAU;AACR,UAAKC,GAAL,GAAY,KAAKC,KAAjB,CAAKD,GAAL;;AAEA,UAAIL,QAAQ,CAAC,KAAKM,KAAL,CAAWD,GAAZ,CAAZ,EAA8B;AAC5BA,QAAAA,GAAG,GAAGJ,gBAAgB,CAAC,KAAKK,KAAL,CAAWD,GAAZ,CAAtB;AACD;;AAED,aAAOA,GAAP;AACD;;;WAED,kBAAS;AACP,UACE,CAAC,KAAKC,KAAL,CAAWD,GAAZ,IACA,CAAC,KAAKC,KAAL,CAAWC,WADZ,IAEA,CAAC,KAAKD,KAAL,CAAWC,WAAX,CAAuBC,MAH1B,EAIE;AACA,eAAO,IAAP;AACD;;AAED,UAAMF,KAAK,mCACN,KAAKA,KADC;AAETD,QAAAA,GAAG,EAAE,KAAKI,OAAL;AAFI,QAAX;;AAKA,aACE,oBAAC,iBAAD;AAAmB,QAAA,GAAG,EAAC;AAAvB,SAA0CH,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGR,2BAA2B,CAAC,KAAKQ,KAAL,CAAWI,QAAZ,EAAsB;AAChDC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM;AAD2B,OAAtB,CAD9B,CADF;AAOD;;;;EAtDuBV,c;;AAApBE,W,CACGS,S,mCACFd,a;AAKHa,EAAAA,EAAE,EAAEhB,SAAS,CAACkB,MAAV,CAAiBC,U;AAMrBV,EAAAA,GAAG,EAAET,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,MAAX,EAAmBrB,SAAS,CAACkB,MAA7B,CAApB,C;AAKLP,EAAAA,WAAW,EAAEX,SAAS,CAACsB,OAAV,CACXtB,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACqB,MAA5B,EAAoCF,UADzB,EAEXA;;AAqCN,IAAMI,iBAAiB,GAAGtB,sBAAsB,CAC9CM,kBAD8C,EAE9CC,WAF8C,CAAhD;AAKA,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {requireNativeComponent} from 'react-native';\n\nimport {\n  cloneReactChildrenWithProps,\n  viewPropTypes,\n  isNumber,\n  resolveImagePath,\n} from '../utils';\n\nimport AbstractSource from './AbstractSource';\n\nexport const NATIVE_MODULE_NAME = 'RCTMGLImageSource';\n\n/**\n * ImageSource is a content source that is used for a georeferenced raster image to be shown on the map.\n * The georeferenced image scales and rotates as the user zooms and rotates the map\n */\nclass ImageSource extends AbstractSource {\n  static propTypes = {\n    ...viewPropTypes,\n\n    /**\n     * A string that uniquely identifies the source.\n     */\n    id: PropTypes.string.isRequired,\n\n    /**\n     * An HTTP(S) URL, absolute file URL, or local file URL to the source image.\n     * Gifs are currently not supported.\n     */\n    url: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * The top left, top right, bottom right, and bottom left coordinates for the image.\n     */\n    coordinates: PropTypes.arrayOf(\n      PropTypes.arrayOf(PropTypes.number).isRequired,\n    ).isRequired,\n  };\n\n  _getURL() {\n    let {url} = this.props;\n\n    if (isNumber(this.props.url)) {\n      url = resolveImagePath(this.props.url);\n    }\n\n    return url;\n  }\n\n  render() {\n    if (\n      !this.props.url ||\n      !this.props.coordinates ||\n      !this.props.coordinates.length\n    ) {\n      return null;\n    }\n\n    const props = {\n      ...this.props,\n      url: this._getURL(),\n    };\n\n    return (\n      <RCTMGLImageSource ref=\"nativeSource\" {...props}>\n        {cloneReactChildrenWithProps(this.props.children, {\n          sourceID: this.props.id,\n        })}\n      </RCTMGLImageSource>\n    );\n  }\n}\n\nconst RCTMGLImageSource = requireNativeComponent(\n  NATIVE_MODULE_NAME,\n  ImageSource,\n);\n\nexport default ImageSource;\n"]},"metadata":{},"sourceType":"module"}