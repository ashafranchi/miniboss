{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/components/UserLocation.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport locationManager from \"../modules/location/locationManager\";\nimport Annotation from \"./annotations/Annotation\";\nimport CircleLayer from \"./CircleLayer\";\nimport HeadingIndicator from \"./HeadingIndicator\";\nimport NativeUserLocation from \"./NativeUserLocation\";\nvar mapboxBlue = 'rgba(51, 181, 229, 100)';\nvar layerStyles = {\n  normal: {\n    pluse: {\n      circleRadius: 15,\n      circleColor: mapboxBlue,\n      circleOpacity: 0.2,\n      circlePitchAlignment: 'map'\n    },\n    background: {\n      circleRadius: 9,\n      circleColor: '#fff',\n      circlePitchAlignment: 'map'\n    },\n    foreground: {\n      circleRadius: 6,\n      circleColor: mapboxBlue,\n      circlePitchAlignment: 'map'\n    }\n  }\n};\nexport var normalIcon = function normalIcon(showsUserHeadingIndicator, heading) {\n  return [React.createElement(CircleLayer, {\n    key: \"mapboxUserLocationPluseCircle\",\n    id: \"mapboxUserLocationPluseCircle\",\n    style: layerStyles.normal.pluse,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }), React.createElement(CircleLayer, {\n    key: \"mapboxUserLocationWhiteCircle\",\n    id: \"mapboxUserLocationWhiteCircle\",\n    style: layerStyles.normal.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }), React.createElement(CircleLayer, {\n    key: \"mapboxUserLocationBlueCicle\",\n    id: \"mapboxUserLocationBlueCicle\",\n    aboveLayerID: \"mapboxUserLocationWhiteCircle\",\n    style: layerStyles.normal.foreground,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  })].concat(_toConsumableArray(showsUserHeadingIndicator && heading !== null ? [HeadingIndicator(heading)] : []));\n};\n\nvar UserLocation = function (_React$Component) {\n  _inherits(UserLocation, _React$Component);\n\n  var _super = _createSuper(UserLocation);\n\n  function UserLocation(props) {\n    var _this2;\n\n    _classCallCheck(this, UserLocation);\n\n    _this2 = _super.call(this, props);\n    _this2._isMounted = null;\n    _this2.locationManagerRunning = false;\n    _this2.state = {\n      shouldShowUserLocation: false,\n      coordinates: null,\n      heading: null\n    };\n    _this2._onLocationUpdate = _this2._onLocationUpdate.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(UserLocation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this._isMounted = true;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.setLocationManager({\n                running: this.needsLocationManagerRunning()\n              }));\n\n            case 3:\n              if (!(this.renderMode === UserLocation.RenderMode.Native)) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              locationManager.setMinDisplacement(this.props.minDisplacement);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      return _regeneratorRuntime.async(function componentDidUpdate$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.setLocationManager({\n                running: this.needsLocationManagerRunning()\n              }));\n\n            case 2:\n              if (this.props.minDisplacement !== prevProps.minDisplacement) {\n                locationManager.setMinDisplacement(this.props.minDisplacement);\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      return _regeneratorRuntime.async(function componentWillUnmount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this._isMounted = false;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(this.setLocationManager({\n                running: false\n              }));\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setLocationManager\",\n    value: function setLocationManager(_ref) {\n      var running, location;\n      return _regeneratorRuntime.async(function setLocationManager$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              running = _ref.running;\n\n              if (!(this.locationManagerRunning !== running)) {\n                _context4.next = 12;\n                break;\n              }\n\n              this.locationManagerRunning = running;\n\n              if (!running) {\n                _context4.next = 11;\n                break;\n              }\n\n              locationManager.addListener(this._onLocationUpdate);\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(locationManager.getLastKnownLocation());\n\n            case 7:\n              location = _context4.sent;\n\n              this._onLocationUpdate(location);\n\n              _context4.next = 12;\n              break;\n\n            case 11:\n              locationManager.removeListener(this._onLocationUpdate);\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"needsLocationManagerRunning\",\n    value: function needsLocationManagerRunning() {\n      return !!this.props.onUpdate || this.props.renderMode === UserLocation.RenderMode.Normal && this.props.visible;\n    }\n  }, {\n    key: \"_onLocationUpdate\",\n    value: function _onLocationUpdate(location) {\n      if (!this._isMounted || !location) {\n        return;\n      }\n\n      var coordinates = null;\n      var heading = null;\n\n      if (location && location.coords) {\n        var _location$coords = location.coords,\n            longitude = _location$coords.longitude,\n            latitude = _location$coords.latitude;\n        heading = location.coords.heading;\n        coordinates = [longitude, latitude];\n      }\n\n      this.setState({\n        coordinates: coordinates,\n        heading: heading\n      });\n\n      if (this.props.onUpdate) {\n        this.props.onUpdate(location);\n      }\n    }\n  }, {\n    key: \"_renderNative\",\n    value: function _renderNative() {\n      var _this$props = this.props,\n          androidRenderMode = _this$props.androidRenderMode,\n          showsUserHeadingIndicator = _this$props.showsUserHeadingIndicator;\n      var props = {\n        androidRenderMode: androidRenderMode,\n        iosShowsUserHeadingIndicator: showsUserHeadingIndicator\n      };\n      return React.createElement(NativeUserLocation, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 12\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          heading = _this$state.heading,\n          coordinates = _this$state.coordinates;\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          visible = _this$props2.visible,\n          showsUserHeadingIndicator = _this$props2.showsUserHeadingIndicator,\n          onPress = _this$props2.onPress,\n          animated = _this$props2.animated;\n\n      if (!visible) {\n        return null;\n      }\n\n      if (this.props.renderMode === UserLocation.RenderMode.Native) {\n        return this._renderNative();\n      }\n\n      if (!coordinates) {\n        return null;\n      }\n\n      return React.createElement(Annotation, {\n        animated: animated,\n        id: \"mapboxUserLocation\",\n        onPress: onPress,\n        coordinates: coordinates,\n        style: {\n          iconRotate: heading\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }\n      }, children || normalIcon(showsUserHeadingIndicator, heading));\n    }\n  }]);\n\n  return UserLocation;\n}(React.Component);\n\nUserLocation.propTypes = {\n  animated: PropTypes.bool,\n  renderMode: PropTypes.oneOf(['normal', 'native']),\n  androidRenderMode: PropTypes.oneOf(['normal', 'compass', 'gps']),\n  visible: PropTypes.bool,\n  onPress: PropTypes.func,\n  onUpdate: PropTypes.func,\n  showsUserHeadingIndicator: PropTypes.bool,\n  minDisplacement: PropTypes.number,\n  children: PropTypes.any\n};\nUserLocation.defaultProps = {\n  animated: true,\n  visible: true,\n  showsUserHeadingIndicator: false,\n  minDisplacement: 0,\n  renderMode: 'normal'\n};\nUserLocation.RenderMode = {\n  Native: 'native',\n  Normal: 'normal'\n};\nexport default UserLocation;","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/components/UserLocation.js"],"names":["React","PropTypes","locationManager","Annotation","CircleLayer","HeadingIndicator","NativeUserLocation","mapboxBlue","layerStyles","normal","pluse","circleRadius","circleColor","circleOpacity","circlePitchAlignment","background","foreground","normalIcon","showsUserHeadingIndicator","heading","UserLocation","props","_isMounted","locationManagerRunning","state","shouldShowUserLocation","coordinates","_onLocationUpdate","bind","setLocationManager","running","needsLocationManagerRunning","renderMode","RenderMode","Native","setMinDisplacement","minDisplacement","prevProps","addListener","getLastKnownLocation","location","removeListener","onUpdate","Normal","visible","coords","longitude","latitude","setState","androidRenderMode","iosShowsUserHeadingIndicator","children","onPress","animated","_renderNative","iconRotate","Component","propTypes","bool","oneOf","func","number","any","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport locationManager from '../modules/location/locationManager';\n\nimport Annotation from './annotations/Annotation'; // eslint-disable-line import/no-cycle\nimport CircleLayer from './CircleLayer';\nimport HeadingIndicator from './HeadingIndicator';\nimport NativeUserLocation from './NativeUserLocation';\n\nconst mapboxBlue = 'rgba(51, 181, 229, 100)';\n\nconst layerStyles = {\n  normal: {\n    pluse: {\n      circleRadius: 15,\n      circleColor: mapboxBlue,\n      circleOpacity: 0.2,\n      circlePitchAlignment: 'map',\n    },\n    background: {\n      circleRadius: 9,\n      circleColor: '#fff',\n      circlePitchAlignment: 'map',\n    },\n    foreground: {\n      circleRadius: 6,\n      circleColor: mapboxBlue,\n      circlePitchAlignment: 'map',\n    },\n  },\n};\n\nexport const normalIcon = (showsUserHeadingIndicator, heading) => [\n  <CircleLayer\n    key=\"mapboxUserLocationPluseCircle\"\n    id=\"mapboxUserLocationPluseCircle\"\n    style={layerStyles.normal.pluse}\n  />,\n  <CircleLayer\n    key=\"mapboxUserLocationWhiteCircle\"\n    id=\"mapboxUserLocationWhiteCircle\"\n    style={layerStyles.normal.background}\n  />,\n  <CircleLayer\n    key=\"mapboxUserLocationBlueCicle\"\n    id=\"mapboxUserLocationBlueCicle\"\n    aboveLayerID=\"mapboxUserLocationWhiteCircle\"\n    style={layerStyles.normal.foreground}\n  />,\n  ...(showsUserHeadingIndicator && heading !== null\n    ? [HeadingIndicator(heading)]\n    : []),\n];\n\nclass UserLocation extends React.Component {\n  static propTypes = {\n    /**\n     * Whether location icon is animated between updates\n     */\n    animated: PropTypes.bool,\n\n    /**\n     * Which render mode to use.\n     * Can either be `normal` or `native`\n     */\n    renderMode: PropTypes.oneOf(['normal', 'native']),\n\n    /**\n     * native/android only render mode\n     *\n     *  - normal: just a circle\n     *  - compass: triangle with heading\n     *  - gps: large arrow\n     *\n     * @platform android\n     */\n    androidRenderMode: PropTypes.oneOf(['normal', 'compass', 'gps']),\n\n    /**\n     * Whether location icon is visible\n     */\n    visible: PropTypes.bool,\n\n    /**\n     * Callback that is triggered on location icon press\n     */\n    onPress: PropTypes.func,\n\n    /**\n     * Callback that is triggered on location update\n     */\n    onUpdate: PropTypes.func,\n\n    /**\n     * Show or hide small arrow which indicates direction the device is pointing relative to north.\n     */\n    showsUserHeadingIndicator: PropTypes.bool,\n\n    /**\n     * Minimum amount of movement before GPS location is updated in meters\n     */\n    minDisplacement: PropTypes.number,\n\n    /**\n     * Custom location icon of type mapbox-gl-native components\n     */\n    children: PropTypes.any,\n  };\n\n  static defaultProps = {\n    animated: true,\n    visible: true,\n    showsUserHeadingIndicator: false,\n    minDisplacement: 0,\n    renderMode: 'normal',\n  };\n\n  static RenderMode = {\n    Native: 'native',\n    Normal: 'normal',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shouldShowUserLocation: false,\n      coordinates: null,\n      heading: null,\n    };\n\n    this._onLocationUpdate = this._onLocationUpdate.bind(this);\n  }\n\n  // required as #setLocationManager attempts to setState\n  // after component unmount\n  _isMounted = null;\n\n  locationManagerRunning = false;\n\n  async componentDidMount() {\n    this._isMounted = true;\n\n    await this.setLocationManager({\n      running: this.needsLocationManagerRunning(),\n    });\n\n    if (this.renderMode === UserLocation.RenderMode.Native) {\n      return;\n    }\n\n    locationManager.setMinDisplacement(this.props.minDisplacement);\n  }\n\n  async componentDidUpdate(prevProps) {\n    await this.setLocationManager({\n      running: this.needsLocationManagerRunning(),\n    });\n\n    if (this.props.minDisplacement !== prevProps.minDisplacement) {\n      locationManager.setMinDisplacement(this.props.minDisplacement);\n    }\n  }\n\n  async componentWillUnmount() {\n    this._isMounted = false;\n    await this.setLocationManager({running: false});\n  }\n\n  /**\n   * Whether to start or stop listening to the locationManager\n   *\n   * Notice, that listening will start automatically when\n   * either `onUpdate` or `visible` are set\n   *\n   * @async\n   * @param {Object} running - Object with key `running` and `boolean` value\n   * @return {Promise<void>}\n   */\n  async setLocationManager({running}) {\n    if (this.locationManagerRunning !== running) {\n      this.locationManagerRunning = running;\n      if (running) {\n        locationManager.addListener(this._onLocationUpdate);\n        const location = await locationManager.getLastKnownLocation();\n        this._onLocationUpdate(location);\n      } else {\n        locationManager.removeListener(this._onLocationUpdate);\n      }\n    }\n  }\n\n  /**\n   *\n   * If locationManager should be running\n   *\n   * @return {boolean}\n   */\n  needsLocationManagerRunning() {\n    return (\n      !!this.props.onUpdate ||\n      (this.props.renderMode === UserLocation.RenderMode.Normal &&\n        this.props.visible)\n    );\n  }\n\n  _onLocationUpdate(location) {\n    if (!this._isMounted || !location) {\n      return;\n    }\n    let coordinates = null;\n    let heading = null;\n\n    if (location && location.coords) {\n      const {longitude, latitude} = location.coords;\n      ({heading} = location.coords);\n      coordinates = [longitude, latitude];\n    }\n\n    this.setState({\n      coordinates,\n      heading,\n    });\n\n    if (this.props.onUpdate) {\n      this.props.onUpdate(location);\n    }\n  }\n\n  _renderNative() {\n    const {androidRenderMode, showsUserHeadingIndicator} = this.props;\n\n    let props = {\n      androidRenderMode,\n      iosShowsUserHeadingIndicator: showsUserHeadingIndicator,\n    };\n    return <NativeUserLocation {...props} />;\n  }\n\n  render() {\n    const {heading, coordinates} = this.state;\n    const {children, visible, showsUserHeadingIndicator, onPress, animated} =\n      this.props;\n\n    if (!visible) {\n      return null;\n    }\n\n    if (this.props.renderMode === UserLocation.RenderMode.Native) {\n      return this._renderNative();\n    }\n\n    if (!coordinates) {\n      return null;\n    }\n\n    return (\n      <Annotation\n        animated={animated}\n        id=\"mapboxUserLocation\"\n        onPress={onPress}\n        coordinates={coordinates}\n        style={{\n          iconRotate: heading,\n        }}\n      >\n        {children || normalIcon(showsUserHeadingIndicator, heading)}\n      </Annotation>\n    );\n  }\n}\n\nexport default UserLocation;\n"]},"metadata":{},"sourceType":"module"}