{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/components/PointAnnotation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { toJSONString, isFunction, viewPropTypes } from \"../utils\";\nimport { makePoint } from \"../utils/geoUtils\";\nimport NativeBridgeComponent from \"./NativeBridgeComponent\";\nexport var NATIVE_MODULE_NAME = 'RCTMGLPointAnnotation';\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute'\n  }\n});\n\nvar PointAnnotation = function (_NativeBridgeComponen) {\n  _inherits(PointAnnotation, _NativeBridgeComponen);\n\n  var _super = _createSuper(PointAnnotation);\n\n  function PointAnnotation(props) {\n    var _this;\n\n    _classCallCheck(this, PointAnnotation);\n\n    _this = _super.call(this, props, NATIVE_MODULE_NAME);\n    _this._onSelected = _this._onSelected.bind(_assertThisInitialized(_this));\n    _this._onDeselected = _this._onDeselected.bind(_assertThisInitialized(_this));\n    _this._onDragStart = _this._onDragStart.bind(_assertThisInitialized(_this));\n    _this._onDrag = _this._onDrag.bind(_assertThisInitialized(_this));\n    _this._onDragEnd = _this._onDragEnd.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PointAnnotation, [{\n    key: \"_onSelected\",\n    value: function _onSelected(e) {\n      if (isFunction(this.props.onSelected)) {\n        this.props.onSelected(e.nativeEvent.payload);\n      }\n    }\n  }, {\n    key: \"_onDeselected\",\n    value: function _onDeselected(e) {\n      if (isFunction(this.props.onDeselected)) {\n        this.props.onDeselected(e.nativeEvent.payload);\n      }\n    }\n  }, {\n    key: \"_onDragStart\",\n    value: function _onDragStart(e) {\n      if (isFunction(this.props.onDragStart)) {\n        this.props.onDragStart(e.nativeEvent.payload);\n      }\n    }\n  }, {\n    key: \"_onDrag\",\n    value: function _onDrag(e) {\n      if (isFunction(this.props.onDrag)) {\n        this.props.onDrag(e.nativeEvent.payload);\n      }\n    }\n  }, {\n    key: \"_onDragEnd\",\n    value: function _onDragEnd(e) {\n      if (isFunction(this.props.onDragEnd)) {\n        this.props.onDragEnd(e.nativeEvent.payload);\n      }\n    }\n  }, {\n    key: \"_getCoordinate\",\n    value: function _getCoordinate() {\n      if (!this.props.coordinate) {\n        return undefined;\n      }\n\n      return toJSONString(makePoint(this.props.coordinate));\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      if (Platform.OS === 'android') {\n        this._runNativeCommand('refresh', this._nativeRef, []);\n      }\n    }\n  }, {\n    key: \"_setNativeRef\",\n    value: function _setNativeRef(nativeRef) {\n      this._nativeRef = nativeRef;\n\n      _get(_getPrototypeOf(PointAnnotation.prototype), \"_runPendingNativeCommands\", this).call(this, nativeRef);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = _objectSpread(_objectSpread({}, this.props), {}, {\n        ref: function ref(nativeRef) {\n          return _this2._setNativeRef(nativeRef);\n        },\n        id: this.props.id,\n        title: this.props.title,\n        snippet: this.props.snippet,\n        anchor: this.props.anchor,\n        selected: this.props.selected,\n        draggable: this.props.draggable,\n        style: [this.props.style, styles.container],\n        onMapboxPointAnnotationSelected: this._onSelected,\n        onMapboxPointAnnotationDeselected: this._onDeselected,\n        onMapboxPointAnnotationDragStart: this._onDragStart,\n        onMapboxPointAnnotationDrag: this._onDrag,\n        onMapboxPointAnnotationDragEnd: this._onDragEnd,\n        coordinate: this._getCoordinate()\n      });\n\n      return React.createElement(RCTMGLPointAnnotation, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }\n      }), this.props.children);\n    }\n  }]);\n\n  return PointAnnotation;\n}(NativeBridgeComponent(React.PureComponent));\n\nPointAnnotation.propTypes = _objectSpread(_objectSpread({}, viewPropTypes), {}, {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  snippet: PropTypes.string,\n  selected: PropTypes.bool,\n  draggable: PropTypes.bool,\n  coordinate: PropTypes.arrayOf(PropTypes.number).isRequired,\n  anchor: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }),\n  onSelected: PropTypes.func,\n  onDeselected: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrag: PropTypes.func\n});\nPointAnnotation.defaultProps = {\n  anchor: {\n    x: 0.5,\n    y: 0.5\n  },\n  draggable: false\n};\nvar RCTMGLPointAnnotation = requireNativeComponent(NATIVE_MODULE_NAME, PointAnnotation, {\n  nativeOnly: {\n    onMapboxPointAnnotationSelected: true,\n    onMapboxPointAnnotationDeselected: true,\n    onMapboxPointAnnotationDragStart: true,\n    onMapboxPointAnnotationDrag: true,\n    onMapboxPointAnnotationDragEnd: true\n  }\n});\nexport default PointAnnotation;","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/components/PointAnnotation.js"],"names":["React","PropTypes","requireNativeComponent","toJSONString","isFunction","viewPropTypes","makePoint","NativeBridgeComponent","NATIVE_MODULE_NAME","styles","StyleSheet","create","container","alignItems","justifyContent","position","PointAnnotation","props","_onSelected","bind","_onDeselected","_onDragStart","_onDrag","_onDragEnd","e","onSelected","nativeEvent","payload","onDeselected","onDragStart","onDrag","onDragEnd","coordinate","undefined","Platform","OS","_runNativeCommand","_nativeRef","nativeRef","ref","_setNativeRef","id","title","snippet","anchor","selected","draggable","style","onMapboxPointAnnotationSelected","onMapboxPointAnnotationDeselected","onMapboxPointAnnotationDragStart","onMapboxPointAnnotationDrag","onMapboxPointAnnotationDragEnd","_getCoordinate","children","PureComponent","propTypes","string","isRequired","bool","arrayOf","number","shape","x","y","func","defaultProps","RCTMGLPointAnnotation","nativeOnly"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {requireNativeComponent, StyleSheet, Platform} from 'react-native';\n\nimport {toJSONString, isFunction, viewPropTypes} from '../utils';\nimport {makePoint} from '../utils/geoUtils';\n\nimport NativeBridgeComponent from './NativeBridgeComponent';\n\nexport const NATIVE_MODULE_NAME = 'RCTMGLPointAnnotation';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n  },\n});\n\n/**\n * PointAnnotation represents a one-dimensional shape located at a single geographical coordinate.\n *\n * Consider using ShapeSource and SymbolLayer instead, if you have many points and you have static images,\n * they'll offer much better performance\n *\n * .\n * If you need interctive views please use MarkerView,\n * as with PointAnnotation on Android child views are rendered onto a bitmap for better performance.\n */\nclass PointAnnotation extends NativeBridgeComponent(React.PureComponent) {\n  static propTypes = {\n    ...viewPropTypes,\n\n    /**\n     * A string that uniquely identifies the annotation\n     */\n    id: PropTypes.string.isRequired,\n\n    /**\n     * The string containing the annotation’s title. Note this is required to be set if you want to see a callout appear on iOS.\n     */\n    title: PropTypes.string,\n\n    /**\n     * The string containing the annotation’s snippet(subtitle). Not displayed in the default callout.\n     */\n    snippet: PropTypes.string,\n\n    /**\n     * Manually selects/deselects annotation\n     * @type {[type]}\n     */\n    selected: PropTypes.bool,\n\n    /**\n     * Enable or disable dragging. Defaults to false.\n     */\n    draggable: PropTypes.bool,\n\n    /**\n     * The center point (specified as a map coordinate) of the annotation.\n     */\n    coordinate: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * Specifies the anchor being set on a particular point of the annotation.\n     * The anchor point is specified in the continuous space [0.0, 1.0] x [0.0, 1.0],\n     * where (0, 0) is the top-left corner of the image, and (1, 1) is the bottom-right corner.\n     * Note this is only for custom annotations not the default pin view.\n     * Defaults to the center of the view.\n     */\n    anchor: PropTypes.shape({\n      /**\n       * See anchor\n       */\n      x: PropTypes.number.isRequired,\n      /**\n       * See anchor\n       */\n      y: PropTypes.number.isRequired,\n    }),\n\n    /**\n     * This callback is fired once this annotation is selected. Returns a Feature as the first param.\n     */\n    onSelected: PropTypes.func,\n\n    /**\n     * This callback is fired once this annotation is deselected.\n     */\n    onDeselected: PropTypes.func,\n\n    /**\n     * This callback is fired once this annotation has started being dragged.\n     */\n    onDragStart: PropTypes.func,\n\n    /**\n     * This callback is fired once this annotation has stopped being dragged.\n     */\n    onDragEnd: PropTypes.func,\n\n    /**\n     * This callback is fired while this annotation is being dragged.\n     */\n    onDrag: PropTypes.func,\n  };\n\n  static defaultProps = {\n    anchor: {x: 0.5, y: 0.5},\n    draggable: false,\n  };\n\n  constructor(props) {\n    super(props, NATIVE_MODULE_NAME);\n    this._onSelected = this._onSelected.bind(this);\n    this._onDeselected = this._onDeselected.bind(this);\n    this._onDragStart = this._onDragStart.bind(this);\n    this._onDrag = this._onDrag.bind(this);\n    this._onDragEnd = this._onDragEnd.bind(this);\n  }\n\n  _onSelected(e) {\n    if (isFunction(this.props.onSelected)) {\n      this.props.onSelected(e.nativeEvent.payload);\n    }\n  }\n\n  _onDeselected(e) {\n    if (isFunction(this.props.onDeselected)) {\n      this.props.onDeselected(e.nativeEvent.payload);\n    }\n  }\n\n  _onDragStart(e) {\n    if (isFunction(this.props.onDragStart)) {\n      this.props.onDragStart(e.nativeEvent.payload);\n    }\n  }\n\n  _onDrag(e) {\n    if (isFunction(this.props.onDrag)) {\n      this.props.onDrag(e.nativeEvent.payload);\n    }\n  }\n\n  _onDragEnd(e) {\n    if (isFunction(this.props.onDragEnd)) {\n      this.props.onDragEnd(e.nativeEvent.payload);\n    }\n  }\n\n  _getCoordinate() {\n    if (!this.props.coordinate) {\n      return undefined;\n    }\n    return toJSONString(makePoint(this.props.coordinate));\n  }\n\n  /**\n   * On android point annotation is rendered offscreen with a canvas into an image.\n   * To rerender the image from the current state of the view call refresh.\n   * Call this for example from Image#onLoad.\n   */\n  refresh() {\n    if (Platform.OS === 'android') {\n      this._runNativeCommand('refresh', this._nativeRef, []);\n    }\n  }\n\n  _setNativeRef(nativeRef) {\n    this._nativeRef = nativeRef;\n    super._runPendingNativeCommands(nativeRef);\n  }\n\n  render() {\n    const props = {\n      ...this.props,\n      ref: (nativeRef) => this._setNativeRef(nativeRef),\n      id: this.props.id,\n      title: this.props.title,\n      snippet: this.props.snippet,\n      anchor: this.props.anchor,\n      selected: this.props.selected,\n      draggable: this.props.draggable,\n      style: [this.props.style, styles.container],\n      onMapboxPointAnnotationSelected: this._onSelected,\n      onMapboxPointAnnotationDeselected: this._onDeselected,\n      onMapboxPointAnnotationDragStart: this._onDragStart,\n      onMapboxPointAnnotationDrag: this._onDrag,\n      onMapboxPointAnnotationDragEnd: this._onDragEnd,\n      coordinate: this._getCoordinate(),\n    };\n    return (\n      <RCTMGLPointAnnotation {...props}>\n        {this.props.children}\n      </RCTMGLPointAnnotation>\n    );\n  }\n}\n\nconst RCTMGLPointAnnotation = requireNativeComponent(\n  NATIVE_MODULE_NAME,\n  PointAnnotation,\n  {\n    nativeOnly: {\n      onMapboxPointAnnotationSelected: true,\n      onMapboxPointAnnotationDeselected: true,\n      onMapboxPointAnnotationDragStart: true,\n      onMapboxPointAnnotationDrag: true,\n      onMapboxPointAnnotationDragEnd: true,\n    },\n  },\n);\n\nexport default PointAnnotation;\n"]},"metadata":{},"sourceType":"module"}