{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Animated from \"react-native-web/dist/exports/Animated\";\nvar AnimatedWithChildren = Object.getPrototypeOf(Animated.ValueXY);\n\nif (__DEV__) {\n  if (AnimatedWithChildren.name !== 'AnimatedWithChildren') {\n    console.error('AnimatedCoordinatesArray could not obtain AnimatedWithChildren base class');\n  }\n}\n\nvar defaultConfig = {\n  useNativeDriver: false\n};\n\nvar AnimatedCoordinatesArray = function (_AnimatedWithChildren) {\n  _inherits(AnimatedCoordinatesArray, _AnimatedWithChildren);\n\n  var _super = _createSuper(AnimatedCoordinatesArray);\n\n  function AnimatedCoordinatesArray() {\n    var _this2;\n\n    var _this;\n\n    _classCallCheck(this, AnimatedCoordinatesArray);\n\n    _this = _super.call(this);\n    _this.state = (_this2 = _this).onInitialState.apply(_this2, arguments);\n    return _this;\n  }\n\n  _createClass(AnimatedCoordinatesArray, [{\n    key: \"onInitialState\",\n    value: function onInitialState(coordinatesArray) {\n      return {\n        coords: coordinatesArray.map(function (coord) {\n          return [coord[0], coord[1]];\n        })\n      };\n    }\n  }, {\n    key: \"onGetValue\",\n    value: function onGetValue(state) {\n      return state.coords;\n    }\n  }, {\n    key: \"onCalculate\",\n    value: function onCalculate(state, progress) {\n      var coords = state.coords,\n          targetCoords = state.targetCoords;\n      var newF = progress;\n      var origF = 1.0 - newF;\n      var commonLen = Math.min(coords.length, targetCoords.length);\n      var common = coords.slice(0, commonLen).map(function (origCoord, i) {\n        return [origCoord[0] * origF + targetCoords[i][0] * newF, origCoord[1] * origF + targetCoords[i][1] * newF];\n      });\n\n      if (targetCoords.length > coords.length) {\n        var addingOrig = coords.length > 0 ? coords[coords.length - 1] : targetCoords[0];\n        var adding = targetCoords.slice(commonLen, targetCoords.length).map(function (newCoord) {\n          return [addingOrig[0] * origF + newCoord[0] * newF, addingOrig[1] * origF + newCoord[1] * newF];\n        });\n        return {\n          coords: [].concat(_toConsumableArray(common), _toConsumableArray(adding)),\n          targetCoords: targetCoords\n        };\n      }\n\n      if (coords.length > targetCoords.length) {\n        var dissapearingNew = targetCoords.length > 0 ? targetCoords[targetCoords.length - 1] : coords[0];\n        var dissapearing = coords.slice(commonLen, coords.length).map(function (origCoord) {\n          return [origCoord[0] * origF + dissapearingNew[0] * newF, origCoord[1] * origF + dissapearingNew[1] * newF];\n        });\n        return {\n          coords: [].concat(_toConsumableArray(common), _toConsumableArray(dissapearing)),\n          targetCoords: targetCoords\n        };\n      }\n\n      return {\n        coords: common,\n        targetCoords: targetCoords\n      };\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart(state, toValue) {\n      var targetCoords = toValue.map(function (coord) {\n        return [coord[0], coord[1]];\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        targetCoords: targetCoords\n      });\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(progressValue, progressAnimation, config) {\n      var _this3 = this;\n\n      var toValue = config.toValue;\n\n      var onAnimationStart = function onAnimationStart(animation) {\n        if (_this3.animation) {\n          var actProgress = _this3.progressValue.__getValue();\n\n          _this3.animation.stop();\n\n          _this3.state = _this3.onCalculate(_this3.state, actProgress);\n\n          _this3.progressValue.__removeChild(_this3);\n\n          _this3.progressValue = null;\n          _this3.animation = null;\n        }\n\n        _this3.progressValue = progressValue;\n\n        _this3.progressValue.__addChild(_this3);\n\n        _this3.animation = animation;\n        _this3.state = _this3.onStart(_this3.state, toValue);\n      };\n\n      var origAnimationStart = progressAnimation.start;\n      var newAnimation = progressAnimation;\n\n      newAnimation.start = function start() {\n        onAnimationStart(progressAnimation);\n        origAnimationStart.apply(void 0, arguments);\n      };\n\n      return newAnimation;\n    }\n  }, {\n    key: \"timing\",\n    value: function timing(config) {\n      var progressValue = new Animated.Value(0.0);\n      return this.animate(progressValue, Animated.timing(progressValue, _objectSpread(_objectSpread(_objectSpread({}, defaultConfig), config), {}, {\n        toValue: 1.0\n      })), config);\n    }\n  }, {\n    key: \"spring\",\n    value: function spring(config) {\n      var progressValue = new Animated.Value(0.0);\n      return this.animate(progressValue, Animated.spring(progressValue, _objectSpread(_objectSpread(_objectSpread({}, defaultConfig), config), {}, {\n        toValue: 1.0\n      })), config);\n    }\n  }, {\n    key: \"decay\",\n    value: function decay(config) {\n      var progressValue = new Animated.Value(0.0);\n      return this.animate(progressValue, Animated.decay(this.progressValue, _objectSpread(_objectSpread(_objectSpread({}, defaultConfig), config), {}, {\n        toValue: 1.0\n      })), config);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      if (!this.progressValue) {\n        return this.onGetValue(this.state);\n      }\n\n      return this.onGetValue(this.onCalculate(this.state, this.progressValue.__getValue()));\n    }\n  }]);\n\n  return AnimatedCoordinatesArray;\n}(AnimatedWithChildren);\n\nexport default AnimatedCoordinatesArray;","map":{"version":3,"sources":["/Users/asha/Documents/miniboss/node_modules/@react-native-mapbox-gl/maps/javascript/utils/animated/AnimatedCoordinatesArray.js"],"names":["AnimatedWithChildren","Object","getPrototypeOf","Animated","ValueXY","__DEV__","name","console","error","defaultConfig","useNativeDriver","AnimatedCoordinatesArray","state","onInitialState","coordinatesArray","coords","map","coord","progress","targetCoords","newF","origF","commonLen","Math","min","length","common","slice","origCoord","i","addingOrig","adding","newCoord","dissapearingNew","dissapearing","toValue","progressValue","progressAnimation","config","onAnimationStart","animation","actProgress","__getValue","stop","onCalculate","__removeChild","__addChild","onStart","origAnimationStart","start","newAnimation","Value","animate","timing","spring","decay","onGetValue"],"mappings":";;;;;;;;;;;;;;;;;AAMA,IAAMA,oBAAoB,GAAGC,MAAM,CAACC,cAAP,CAAsBC,QAAQ,CAACC,OAA/B,CAA7B;;AACA,IAAIC,OAAJ,EAAa;AACX,MAAIL,oBAAoB,CAACM,IAArB,KAA8B,sBAAlC,EAA0D;AACxDC,IAAAA,OAAO,CAACC,KAAR,CACE,2EADF;AAGD;AACF;;AAED,IAAMC,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAE;AADG,CAAtB;;IAIMC,wB;;;;;AACJ,sCAAqB;AAAA;;AAAA;;AAAA;;AACnB;AAEA,UAAKC,KAAL,GAAa,iBAAKC,cAAL,yBAAb;AAHmB;AAIpB;;;;WAQD,wBAAeC,gBAAf,EAAiC;AAC/B,aAAO;AAACC,QAAAA,MAAM,EAAED,gBAAgB,CAACE,GAAjB,CAAqB,UAACC,KAAD;AAAA,iBAAW,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAX;AAAA,SAArB;AAAT,OAAP;AACD;;;WASD,oBAAWL,KAAX,EAAkB;AAChB,aAAOA,KAAK,CAACG,MAAb;AACD;;;WASD,qBAAYH,KAAZ,EAAmBM,QAAnB,EAA6B;AAC3B,UAAOH,MAAP,GAA+BH,KAA/B,CAAOG,MAAP;AAAA,UAAeI,YAAf,GAA+BP,KAA/B,CAAeO,YAAf;AACA,UAAMC,IAAI,GAAGF,QAAb;AACA,UAAMG,KAAK,GAAG,MAAMD,IAApB;AAGA,UAAME,SAAS,GAAGC,IAAI,CAACC,GAAL,CAAST,MAAM,CAACU,MAAhB,EAAwBN,YAAY,CAACM,MAArC,CAAlB;AACA,UAAMC,MAAM,GAAGX,MAAM,CAClBY,KADY,CACN,CADM,EACHL,SADG,EAEZN,GAFY,CAER,UAACY,SAAD,EAAYC,CAAZ;AAAA,eAAkB,CACrBD,SAAS,CAAC,CAAD,CAAT,GAAeP,KAAf,GAAuBF,YAAY,CAACU,CAAD,CAAZ,CAAgB,CAAhB,IAAqBT,IADvB,EAErBQ,SAAS,CAAC,CAAD,CAAT,GAAeP,KAAf,GAAuBF,YAAY,CAACU,CAAD,CAAZ,CAAgB,CAAhB,IAAqBT,IAFvB,CAAlB;AAAA,OAFQ,CAAf;;AAOA,UAAID,YAAY,CAACM,MAAb,GAAsBV,MAAM,CAACU,MAAjC,EAAyC;AAEvC,YAAMK,UAAU,GACdf,MAAM,CAACU,MAAP,GAAgB,CAAhB,GAAoBV,MAAM,CAACA,MAAM,CAACU,MAAP,GAAgB,CAAjB,CAA1B,GAAgDN,YAAY,CAAC,CAAD,CAD9D;AAEA,YAAMY,MAAM,GAAGZ,YAAY,CACxBQ,KADY,CACNL,SADM,EACKH,YAAY,CAACM,MADlB,EAEZT,GAFY,CAER,UAACgB,QAAD;AAAA,iBAAc,CACjBF,UAAU,CAAC,CAAD,CAAV,GAAgBT,KAAhB,GAAwBW,QAAQ,CAAC,CAAD,CAAR,GAAcZ,IADrB,EAEjBU,UAAU,CAAC,CAAD,CAAV,GAAgBT,KAAhB,GAAwBW,QAAQ,CAAC,CAAD,CAAR,GAAcZ,IAFrB,CAAd;AAAA,SAFQ,CAAf;AAMA,eAAO;AAACL,UAAAA,MAAM,+BAAMW,MAAN,sBAAiBK,MAAjB,EAAP;AAAiCZ,UAAAA,YAAY,EAAZA;AAAjC,SAAP;AACD;;AAED,UAAIJ,MAAM,CAACU,MAAP,GAAgBN,YAAY,CAACM,MAAjC,EAAyC;AAEvC,YAAMQ,eAAe,GACnBd,YAAY,CAACM,MAAb,GAAsB,CAAtB,GACIN,YAAY,CAACA,YAAY,CAACM,MAAb,GAAsB,CAAvB,CADhB,GAEIV,MAAM,CAAC,CAAD,CAHZ;AAIA,YAAMmB,YAAY,GAAGnB,MAAM,CACxBY,KADkB,CACZL,SADY,EACDP,MAAM,CAACU,MADN,EAElBT,GAFkB,CAEd,UAACY,SAAD;AAAA,iBAAe,CAClBA,SAAS,CAAC,CAAD,CAAT,GAAeP,KAAf,GAAuBY,eAAe,CAAC,CAAD,CAAf,GAAqBb,IAD1B,EAElBQ,SAAS,CAAC,CAAD,CAAT,GAAeP,KAAf,GAAuBY,eAAe,CAAC,CAAD,CAAf,GAAqBb,IAF1B,CAAf;AAAA,SAFc,CAArB;AAMA,eAAO;AAACL,UAAAA,MAAM,+BAAMW,MAAN,sBAAiBQ,YAAjB,EAAP;AAAuCf,UAAAA,YAAY,EAAZA;AAAvC,SAAP;AACD;;AAED,aAAO;AAACJ,QAAAA,MAAM,EAAEW,MAAT;AAAiBP,QAAAA,YAAY,EAAZA;AAAjB,OAAP;AACD;;;WASD,iBAAQP,KAAR,EAAeuB,OAAf,EAAwB;AACtB,UAAMhB,YAAY,GAAGgB,OAAO,CAACnB,GAAR,CAAY,UAACC,KAAD;AAAA,eAAW,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAX;AAAA,OAAZ,CAArB;AACA,6CACKL,KADL;AAEEO,QAAAA,YAAY,EAAZA;AAFF;AAID;;;WAED,iBAAQiB,aAAR,EAAuBC,iBAAvB,EAA0CC,MAA1C,EAAkD;AAAA;;AAChD,UAAOH,OAAP,GAAkBG,MAAlB,CAAOH,OAAP;;AAEA,UAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAe;AACtC,YAAI,MAAI,CAACA,SAAT,EAAoB;AAElB,cAAMC,WAAW,GAAG,MAAI,CAACL,aAAL,CAAmBM,UAAnB,EAApB;;AACA,UAAA,MAAI,CAACF,SAAL,CAAeG,IAAf;;AACA,UAAA,MAAI,CAAC/B,KAAL,GAAa,MAAI,CAACgC,WAAL,CAAiB,MAAI,CAAChC,KAAtB,EAA6B6B,WAA7B,CAAb;;AACA,UAAA,MAAI,CAACL,aAAL,CAAmBS,aAAnB,CAAiC,MAAjC;;AACA,UAAA,MAAI,CAACT,aAAL,GAAqB,IAArB;AACA,UAAA,MAAI,CAACI,SAAL,GAAiB,IAAjB;AACD;;AAED,QAAA,MAAI,CAACJ,aAAL,GAAqBA,aAArB;;AACA,QAAA,MAAI,CAACA,aAAL,CAAmBU,UAAnB,CAA8B,MAA9B;;AACA,QAAA,MAAI,CAACN,SAAL,GAAiBA,SAAjB;AACA,QAAA,MAAI,CAAC5B,KAAL,GAAa,MAAI,CAACmC,OAAL,CAAa,MAAI,CAACnC,KAAlB,EAAyBuB,OAAzB,CAAb;AACD,OAfD;;AAiBA,UAAMa,kBAAkB,GAAGX,iBAAiB,CAACY,KAA7C;AACA,UAAMC,YAAY,GAAGb,iBAArB;;AACAa,MAAAA,YAAY,CAACD,KAAb,GAAqB,SAASA,KAAT,GAAwB;AAC3CV,QAAAA,gBAAgB,CAACF,iBAAD,CAAhB;AACAW,QAAAA,kBAAkB,MAAlB;AACD,OAHD;;AAIA,aAAOE,YAAP;AACD;;;WAED,gBAAOZ,MAAP,EAAe;AACb,UAAMF,aAAa,GAAG,IAAIjC,QAAQ,CAACgD,KAAb,CAAmB,GAAnB,CAAtB;AACA,aAAO,KAAKC,OAAL,CACLhB,aADK,EAELjC,QAAQ,CAACkD,MAAT,CAAgBjB,aAAhB,gDACK3B,aADL,GAEK6B,MAFL;AAGEH,QAAAA,OAAO,EAAE;AAHX,SAFK,EAOLG,MAPK,CAAP;AASD;;;WAED,gBAAOA,MAAP,EAAe;AACb,UAAMF,aAAa,GAAG,IAAIjC,QAAQ,CAACgD,KAAb,CAAmB,GAAnB,CAAtB;AACA,aAAO,KAAKC,OAAL,CACLhB,aADK,EAELjC,QAAQ,CAACmD,MAAT,CAAgBlB,aAAhB,gDACK3B,aADL,GAEK6B,MAFL;AAGEH,QAAAA,OAAO,EAAE;AAHX,SAFK,EAOLG,MAPK,CAAP;AASD;;;WAED,eAAMA,MAAN,EAAc;AACZ,UAAMF,aAAa,GAAG,IAAIjC,QAAQ,CAACgD,KAAb,CAAmB,GAAnB,CAAtB;AACA,aAAO,KAAKC,OAAL,CACLhB,aADK,EAELjC,QAAQ,CAACoD,KAAT,CAAe,KAAKnB,aAApB,gDACK3B,aADL,GAEK6B,MAFL;AAGEH,QAAAA,OAAO,EAAE;AAHX,SAFK,EAOLG,MAPK,CAAP;AASD;;;WAED,sBAAa;AACX,UAAI,CAAC,KAAKF,aAAV,EAAyB;AACvB,eAAO,KAAKoB,UAAL,CAAgB,KAAK5C,KAArB,CAAP;AACD;;AACD,aAAO,KAAK4C,UAAL,CACL,KAAKZ,WAAL,CAAiB,KAAKhC,KAAtB,EAA6B,KAAKwB,aAAL,CAAmBM,UAAnB,EAA7B,CADK,CAAP;AAGD;;;;EA1KoC1C,oB;;AA6KvC,eAAeW,wBAAf","sourcesContent":["import {Animated} from 'react-native';\n\n/* eslint-disable guard-for-in */\n\n// see\n// https://github.com/facebook/react-native/blob/master/Libraries/Animated/src/nodes/AnimatedWithChildren.js\nconst AnimatedWithChildren = Object.getPrototypeOf(Animated.ValueXY);\nif (__DEV__) {\n  if (AnimatedWithChildren.name !== 'AnimatedWithChildren') {\n    console.error(\n      'AnimatedCoordinatesArray could not obtain AnimatedWithChildren base class',\n    );\n  }\n}\n\nconst defaultConfig = {\n  useNativeDriver: false,\n};\n\nclass AnimatedCoordinatesArray extends AnimatedWithChildren {\n  constructor(...args) {\n    super();\n\n    this.state = this.onInitialState(...args);\n  }\n\n  /**\n   * Subclasses can override to calculate initial state\n   *\n   * @param {*} args - to value from animate\n   * @returns {object} - the state object\n   */\n  onInitialState(coordinatesArray) {\n    return {coords: coordinatesArray.map((coord) => [coord[0], coord[1]])};\n  }\n\n  /**\n   * Subclasses can override getValue to calculate value from state.\n   * Value is typically coordinates array, but can be anything\n   *\n   * @param {object} state - either state from initialState and/or from calculate\n   * @returns {object}\n   */\n  onGetValue(state) {\n    return state.coords;\n  }\n\n  /**\n   * Calculates state based on startingState and progress, returns a new state\n   *\n   * @param {object} state - state object from initialState and/or from calculate\n   * @param {number} progress - value between 0 and 1\n   * @returns {object} next state\n   */\n  onCalculate(state, progress) {\n    const {coords, targetCoords} = state;\n    const newF = progress;\n    const origF = 1.0 - newF;\n\n    // common\n    const commonLen = Math.min(coords.length, targetCoords.length);\n    const common = coords\n      .slice(0, commonLen)\n      .map((origCoord, i) => [\n        origCoord[0] * origF + targetCoords[i][0] * newF,\n        origCoord[1] * origF + targetCoords[i][1] * newF,\n      ]);\n\n    if (targetCoords.length > coords.length) {\n      // only in new (adding)\n      const addingOrig =\n        coords.length > 0 ? coords[coords.length - 1] : targetCoords[0];\n      const adding = targetCoords\n        .slice(commonLen, targetCoords.length)\n        .map((newCoord) => [\n          addingOrig[0] * origF + newCoord[0] * newF,\n          addingOrig[1] * origF + newCoord[1] * newF,\n        ]);\n      return {coords: [...common, ...adding], targetCoords};\n    }\n\n    if (coords.length > targetCoords.length) {\n      // only in orig (dissapearing)\n      const dissapearingNew =\n        targetCoords.length > 0\n          ? targetCoords[targetCoords.length - 1]\n          : coords[0];\n      const dissapearing = coords\n        .slice(commonLen, coords.length)\n        .map((origCoord) => [\n          origCoord[0] * origF + dissapearingNew[0] * newF,\n          origCoord[1] * origF + dissapearingNew[1] * newF,\n        ]);\n      return {coords: [...common, ...dissapearing], targetCoords};\n    }\n\n    return {coords: common, targetCoords};\n  }\n\n  /**\n   * Subclasses can override to start a new animation\n   *\n   * @param {*} toValue - to value from animate\n   * @param {*} actCoords - the current coordinates array to start from\n   * @returns {object} The state\n   */\n  onStart(state, toValue) {\n    const targetCoords = toValue.map((coord) => [coord[0], coord[1]]);\n    return {\n      ...state,\n      targetCoords,\n    };\n  }\n\n  animate(progressValue, progressAnimation, config) {\n    const {toValue} = config;\n\n    const onAnimationStart = (animation) => {\n      if (this.animation) {\n        // there was a started but not finsihed animation\n        const actProgress = this.progressValue.__getValue();\n        this.animation.stop();\n        this.state = this.onCalculate(this.state, actProgress);\n        this.progressValue.__removeChild(this);\n        this.progressValue = null;\n        this.animation = null;\n      }\n\n      this.progressValue = progressValue;\n      this.progressValue.__addChild(this);\n      this.animation = animation;\n      this.state = this.onStart(this.state, toValue);\n    };\n\n    const origAnimationStart = progressAnimation.start;\n    const newAnimation = progressAnimation;\n    newAnimation.start = function start(...args) {\n      onAnimationStart(progressAnimation);\n      origAnimationStart(...args);\n    };\n    return newAnimation;\n  }\n\n  timing(config) {\n    const progressValue = new Animated.Value(0.0);\n    return this.animate(\n      progressValue,\n      Animated.timing(progressValue, {\n        ...defaultConfig,\n        ...config,\n        toValue: 1.0,\n      }),\n      config,\n    );\n  }\n\n  spring(config) {\n    const progressValue = new Animated.Value(0.0);\n    return this.animate(\n      progressValue,\n      Animated.spring(progressValue, {\n        ...defaultConfig,\n        ...config,\n        toValue: 1.0,\n      }),\n      config,\n    );\n  }\n\n  decay(config) {\n    const progressValue = new Animated.Value(0.0);\n    return this.animate(\n      progressValue,\n      Animated.decay(this.progressValue, {\n        ...defaultConfig,\n        ...config,\n        toValue: 1.0,\n      }),\n      config,\n    );\n  }\n\n  __getValue() {\n    if (!this.progressValue) {\n      return this.onGetValue(this.state);\n    }\n    return this.onGetValue(\n      this.onCalculate(this.state, this.progressValue.__getValue()),\n    );\n  }\n}\n\nexport default AnimatedCoordinatesArray;\n"]},"metadata":{},"sourceType":"module"}